<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath />
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<groupId>br.com.microservice.project</groupId>
	<artifactId>microservice-project</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>

	<name>microservice-project</name>
	<url>https://github.com/danielso2007</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>11</java.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>

		<spring.profiles.active>dev</spring.profiles.active>

		<skip-tests>true</skip-tests>
		<project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
		<junit.utReportFolder>${project.testresult.directory}/test</junit.utReportFolder>

		<debug.properties>false</debug.properties>
		<trace.properties>false</trace.properties>

		<!-- Banco de dados -->
		<platform.name>mariadb</platform.name>
		<!-- Para executar os arquivos SQL, modificar para always, caso contrário manter never -->
		<initialization-mode>never</initialization-mode>
		<driver-class-name>org.mariadb.jdbc.Driver</driver-class-name>
		<db.name></db.name>
		<db.url>jdbc:mariadb://localhost:3306/${db.name}</db.url>
		<db.username>root</db.username>
		<db.password>root</db.password>
		<db.database-platform>org.hibernate.dialect.MariaDBDialect</db.database-platform>
		<db.show_sql>false</db.show_sql>
		<db.ddl-auto>none</db.ddl-auto>

		<!-- Microservice ports -->
		<fornecedor.port>8081</fornecedor.port>
		<loja.port>8080</loja.port>
		<transportador.port>8082</transportador.port>

		<!-- Config server -->
		<config-server.port>8888</config-server.port>
		<config-server.host>http://localhost:${config-server.port}</config-server.host>

		<!-- Eureka -->
		<eureka.port>8761</eureka.port>
		<eureka.localhost>http://localhost:${eureka.port}/eureka/</eureka.localhost>

		<!-- Dependências -->
		<xnio-ni.version>3.8.1.Final</xnio-ni.version>
		<jboss-threads.version>3.1.1.Final</jboss-threads.version>
		<hibernate-validator.version>6.1.5.Final</hibernate-validator.version>
		<hikariCP.version>3.4.5</hikariCP.version>
		<mariadbl-connector-java.version>2.6.0</mariadbl-connector-java.version>
		<spring-boot-starter-parent.version>2.3.0.RELEASE</spring-boot-starter-parent.version>
		<spring-cloud.version>Hoxton.SR5</spring-cloud.version>
		<spring-cloud-starter-netflix-eureka-client.version>2.2.3.RELEASE</spring-cloud-starter-netflix-eureka-client.version>
	</properties>

	<modules>
		<module>config-server</module>
		<module>eureka-server</module>
		<module>loja</module>
		<module>fornecedor</module>
		<module>transportador</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-actuator</artifactId>
				<version>${spring-boot-starter-parent.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-openfeign</artifactId>
				<version>${spring-cloud-starter-netflix-eureka-client.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
				<version>${spring-cloud-starter-netflix-eureka-client.version}</version>
				<exclusions>
					<exclusion>
						<groupId>com.sun.jersey</groupId>
						<artifactId>jersey-client</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey</groupId>
						<artifactId>jersey-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey.contribs</groupId>
						<artifactId>jersey-apache-client4</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.hibernate.validator</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mariadb.jdbc</groupId>
				<artifactId>mariadb-java-client</artifactId>
				<version>${mariadbl-connector-java.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
				<version>${spring-boot-starter-parent.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.tomcat</groupId>
						<artifactId>tomcat-jdbc</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.zaxxer</groupId>
				<artifactId>HikariCP</artifactId>
				<version>${hikariCP.version}</version>
				<scope>compile</scope>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- Dependencias adicionadas devido ao Java 11 -->
			<dependency>
				<groupId>org.jboss.xnio</groupId>
				<artifactId>xnio-nio</artifactId>
				<version>${xnio-ni.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.threads</groupId>
				<artifactId>jboss-threads</artifactId>
				<version>${jboss-threads.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<defaultGoal>package</defaultGoal>
		<directory>${basedir}/target</directory>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.yml</include>
					<include>**/*.xml</include>
					<include>**/*.html</include>
					<include>**/*.sql</include>
					<include>**/*.properties</include>
				</includes>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<release>${java.version}</release>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<!-- Force alphabetical order to have a reproducible build -->
						<runOrder>alphabetical</runOrder>
						<reportsDirectory>${junit.utReportFolder}</reportsDirectory>
						<skipTests>${skip-tests}</skipTests>
						<workingDirectory>${project.build.directory}</workingDirectory>
						<trimStackTrace>false</trimStackTrace>
						<forkCount>5</forkCount>
						<threadCount>5</threadCount>
						<reuseForks>false</reuseForks>
						<parallel>classes</parallel>
						<perCoreThreadCount>true</perCoreThreadCount>
						<useUnlimitedThreads>false</useUnlimitedThreads>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
						<delimiters>
							<delimiter>@</delimiter>
						</delimiters>
						<useDefaultDelimiters>false</useDefaultDelimiters>
					</configuration>
					<executions>
						<execution>
							<id>copy-resources</id>
							<phase>validate</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}</outputDirectory>
								<resources>
									<resource>
										<directory>src/main/docker</directory>
										<filtering>true</filtering>
									</resource>
									<resource>
										<directory>src/main/script</directory>
										<filtering>true</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>test</id>
			<properties>
				<debug.properties>false</debug.properties>
				<trace.properties>false</trace.properties>
				<spring.profiles.active>test</spring.profiles.active>
				<skip-tests>false</skip-tests>
			</properties>
		</profile>
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
				<skip-tests>true</skip-tests>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<debug.properties>false</debug.properties>
				<trace.properties>false</trace.properties>
				<spring.profiles.active>prod</spring.profiles.active>
				<skip-tests>false</skip-tests>
			</properties>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<developers>
		<developer>
			<id>danielso2007</id>
			<name>Daniel Oliveira</name>
			<email>danielso2007@gmail.com</email>
			<organization>Em casa</organization>
			<roles>
				<role>Project Lead</role>
			</roles>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0</url>
			<comments>
				Copyright 2017-2019 the original author or authors.

				Licensed under the Apache License, Version 2.0 (the "License");
				you may not use this file except in compliance with the License.
				You may obtain a copy of the License at

				https://www.apache.org/licenses/LICENSE-2.0

				Unless required by applicable law or agreed to in writing, software
				distributed under the License is distributed on an "AS IS" BASIS,
				WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
				implied.
				See the License for the specific language governing permissions and
				limitations under the License.
			</comments>
		</license>
	</licenses>
</project>
