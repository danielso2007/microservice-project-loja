<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>br.com.microservice.project</groupId>
		<artifactId>microservice-project</artifactId>
		<version>1.2.0</version>
		<relativePath>../</relativePath> <!-- lookup parent from repository -->
	</parent>

	<groupId>br.com.microservice.project.loja</groupId>
	<artifactId>loja</artifactId>
	<name>loja</name>
	<description>Microservice loja</description>

	<dependencies>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>

		<!-- Removendo o Tomcat para usar o Undertow -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>
			<version>3.2.0</version>
		</dependency>

		<!-- Undertow é um servidor Web de desempenho flexível, escrito em java -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
			<exclusions>
				<exclusion>
					<groupId>io.undertow</groupId>
					<artifactId>undertow-websockets-jsr</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Saúde da aplicação -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Consultar outros microserviços -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>

		<!-- Buscar a configuração da aplicação no servidor -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<!-- Fallback e Circuit Breaker -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
			<version>2.2.10.RELEASE</version>
		</dependency>

		<!-- Eureka -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
			<version>4.2.0</version>
		</dependency>

		<!-- Fallback e Circuit Breaker -->

		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing-bridge-brave</artifactId>
			<version>1.0.12</version>
		</dependency>

		<!-- ORM -->
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.tomcat</groupId>
					<artifactId>tomcat-jdbc</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
		</dependency>

		<!--Security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-oauth2</artifactId>
			<version>2.2.5.RELEASE</version>
		</dependency>

		<!-- Dependencias adicionadas devido ao Java 11 -->
		<dependency>
			<groupId>org.jboss.xnio</groupId>
			<artifactId>xnio-nio</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.threads</groupId>
			<artifactId>jboss-threads</artifactId>
		</dependency>

		<!-- Testes -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<id>test</id>
			<properties>
				<debug.properties>false</debug.properties>
				<trace.properties>false</trace.properties>
				<spring.profiles.active>test</spring.profiles.active>
				<initialization-mode>always</initialization-mode>
				<db.name>loja-${spring.profiles.active}</db.name>
				<db.show_sql>true</db.show_sql>
				<db.ddl-auto>none</db.ddl-auto>
				<skip-tests>false</skip-tests>
			</properties>
		</profile>
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
				<initialization-mode>always</initialization-mode>
				<db.name>loja-${spring.profiles.active}</db.name>
				<db.show_sql>true</db.show_sql>
				<db.ddl-auto>none</db.ddl-auto>
				<skip-tests>true</skip-tests>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<debug.properties>false</debug.properties>
				<trace.properties>false</trace.properties>
				<spring.profiles.active>prod</spring.profiles.active>
				<initialization-mode>never</initialization-mode>
				<db.name>loja</db.name>
				<db.show_sql>false</db.show_sql>
				<db.ddl-auto>none</db.ddl-auto>
				<skip-tests>true</skip-tests>
			</properties>
		</profile>
	</profiles>
</project>
