2020-06-02 20:16:35 INFO  b.c.m.p.t.TransportadorApplication - The following profiles are active: default
2020-06-02 20:16:36 WARN  o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-06-02 20:16:36 WARN  o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-06-02 20:16:37 WARN  c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-06-02 20:16:37 INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 20:16:37 INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6abe62bb
2020-06-02 20:16:39 WARN  c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-06-02 20:16:39 INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 20:16:40 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-06-02 20:16:41 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-06-02 20:16:41 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1591139801387 with initial instances count: 2
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1591139801407, current=UP, previous=STARTING]
2020-06-02 20:16:41 WARN  c.n.discovery.InstanceInfoReplicator - Ignoring onDemand update due to rate limiter
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8080: registering service...
2020-06-02 20:16:41 WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Undertow
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8080 - registration status: 204
2020-06-02 20:16:41 WARN  o.s.b.a.j.DataSourceHealthIndicator - DataSource health check failed
org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: HikariDataSource HikariDataSource (HikariPool-1) has been closed.
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:324)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:122)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:105)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:100)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1675)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:195)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:176)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:170)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1426)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLException: HikariDataSource HikariDataSource (HikariPool-1) has been closed.
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:96)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 24 common frames omitted
2020-06-02 20:16:41 WARN  o.s.c.h.RefreshScopeHealthIndicator - Health check failed
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'refreshScope': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:212)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1306)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getIfAvailable(DefaultListableBeanFactory.java:1941)
	at org.springframework.cloud.health.RefreshScopeHealthIndicator.doHealthCheck(RefreshScopeHealthIndicator.java:49)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1675)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:195)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:176)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:170)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1426)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8080: registering service...
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8080 - registration status: 204
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8080 - deregister  status: 200
2020-06-02 20:16:41 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-06-02 20:16:41 ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Undertow
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:185)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:894)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at br.com.microservice.project.transportador.TransportadorApplication.main(TransportadorApplication.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Undertow
	at org.springframework.boot.web.embedded.undertow.UndertowWebServer.start(UndertowWebServer.java:144)
	at org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle.start(WebServerStartStopLifecycle.java:43)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	... 12 common frames omitted
Caused by: java.lang.RuntimeException: java.net.BindException: Endereço já em uso
	at io.undertow.Undertow.start(Undertow.java:247)
	at org.springframework.boot.web.embedded.undertow.UndertowWebServer.start(UndertowWebServer.java:130)
	... 14 common frames omitted
Caused by: java.net.BindException: Endereço já em uso
	at java.base/sun.nio.ch.Net.bind0(Native Method)
	at java.base/sun.nio.ch.Net.bind(Net.java:455)
	at java.base/sun.nio.ch.Net.bind(Net.java:447)
	at java.base/sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:227)
	at java.base/sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:80)
	at org.xnio.nio.NioXnioWorker.createTcpConnectionServer(NioXnioWorker.java:178)
	at org.xnio.XnioWorker.createStreamConnectionServer(XnioWorker.java:310)
	at io.undertow.Undertow.start(Undertow.java:193)
	... 15 common frames omitted
2020-06-02 20:17:11 INFO  b.c.m.p.t.TransportadorApplication - The following profiles are active: default
2020-06-02 20:17:12 WARN  o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-06-02 20:17:12 WARN  o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-06-02 20:17:13 WARN  c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-06-02 20:17:13 INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 20:17:13 INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@f1d1463
2020-06-02 20:17:14 WARN  c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-06-02 20:17:14 INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 20:17:16 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-06-02 20:17:17 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-06-02 20:17:17 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-06-02 20:17:17 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-06-02 20:17:17 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-06-02 20:17:17 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-06-02 20:17:17 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2020-06-02 20:17:17 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-06-02 20:17:17 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-06-02 20:17:17 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-06-02 20:17:17 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2020-06-02 20:17:17 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-06-02 20:17:17 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-02 20:17:17 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1591139837197 with initial instances count: 2
2020-06-02 20:17:17 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1591139837214, current=UP, previous=STARTING]
2020-06-02 20:17:17 WARN  c.n.discovery.InstanceInfoReplicator - Ignoring onDemand update due to rate limiter
2020-06-02 20:17:17 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082: registering service...
2020-06-02 20:17:17 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082 - registration status: 204
2020-06-02 20:17:17 INFO  b.c.m.p.t.TransportadorApplication - Started TransportadorApplication in 7.082 seconds (JVM running for 7.915)
2020-06-02 20:19:05 WARN  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1591139945634, current=DOWN, previous=UP]
2020-06-02 20:19:05 WARN  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1591139945636, current=UP, previous=DOWN]
2020-06-02 20:19:05 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082: registering service...
2020-06-02 20:19:05 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082 - registration status: 204
2020-06-02 20:19:05 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-06-02 20:19:08 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2020-06-02 20:19:08 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082 - deregister  status: 200
2020-06-02 20:19:08 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-06-02 20:19:14 INFO  b.c.m.p.t.TransportadorApplication - The following profiles are active: default
2020-06-02 20:19:16 WARN  o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-06-02 20:19:16 WARN  o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-06-02 20:19:17 WARN  c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-06-02 20:19:17 INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 20:19:17 INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6a2badb1
2020-06-02 20:19:18 WARN  c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-06-02 20:19:18 INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 20:19:20 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-06-02 20:19:20 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-06-02 20:19:20 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-06-02 20:19:20 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-06-02 20:19:20 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-06-02 20:19:20 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-06-02 20:19:20 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2020-06-02 20:19:20 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-06-02 20:19:20 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-06-02 20:19:20 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-06-02 20:19:20 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2020-06-02 20:19:20 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-06-02 20:19:20 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-02 20:19:20 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1591139960705 with initial instances count: 3
2020-06-02 20:19:20 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1591139960719, current=UP, previous=STARTING]
2020-06-02 20:19:20 WARN  c.n.discovery.InstanceInfoReplicator - Ignoring onDemand update due to rate limiter
2020-06-02 20:19:20 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082: registering service...
2020-06-02 20:19:20 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082 - registration status: 204
2020-06-02 20:19:20 INFO  b.c.m.p.t.TransportadorApplication - Started TransportadorApplication in 7.046 seconds (JVM running for 7.941)
2020-06-02 20:19:33 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2020-06-02 20:20:10 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2020-06-02 20:20:29 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2020-06-02 20:21:14 INFO  b.c.m.p.t.service.EntregaService - Reserva de entrega...
2020-06-02 20:21:14 INFO  b.c.m.p.t.service.EntregaService - Salvando entrega.
2020-06-02 20:21:14 INFO  b.c.m.p.t.service.EntregaService - Retornando voucher.
2020-06-02 20:24:20 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-06-02 20:26:48 WARN  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1591140408457, current=DOWN, previous=UP]
2020-06-02 20:26:48 WARN  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1591140408460, current=UP, previous=DOWN]
2020-06-02 20:26:48 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082: registering service...
2020-06-02 20:26:48 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082 - registration status: 204
2020-06-02 20:26:48 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-06-02 20:26:51 WARN  c.n.discovery.TimedSupervisorTask - task supervisor shutting down, can't accept the task
2020-06-02 20:26:51 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2020-06-02 20:26:51 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082 - deregister  status: 200
2020-06-02 20:26:51 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-06-02 20:27:06 INFO  b.c.m.p.t.TransportadorApplication - The following profiles are active: default
2020-06-02 20:27:07 WARN  o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-06-02 20:27:07 WARN  o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-06-02 20:27:08 WARN  c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-06-02 20:27:08 INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 20:27:08 INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7d977a20
2020-06-02 20:27:10 WARN  c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-06-02 20:27:10 INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 20:27:12 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-06-02 20:27:12 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-06-02 20:27:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-06-02 20:27:12 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-06-02 20:27:12 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-06-02 20:27:12 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-06-02 20:27:12 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2020-06-02 20:27:12 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-06-02 20:27:12 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-06-02 20:27:12 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-06-02 20:27:12 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2020-06-02 20:27:12 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-06-02 20:27:12 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-02 20:27:12 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1591140432863 with initial instances count: 2
2020-06-02 20:27:12 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1591140432879, current=UP, previous=STARTING]
2020-06-02 20:27:12 WARN  c.n.discovery.InstanceInfoReplicator - Ignoring onDemand update due to rate limiter
2020-06-02 20:27:12 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082: registering service...
2020-06-02 20:27:13 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082 - registration status: 204
2020-06-02 20:27:13 INFO  b.c.m.p.t.TransportadorApplication - Started TransportadorApplication in 8.162 seconds (JVM running for 14.508)
2020-06-02 20:32:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-06-02 20:36:05 WARN  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1591140965933, current=DOWN, previous=UP]
2020-06-02 20:36:05 WARN  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1591140965935, current=UP, previous=DOWN]
2020-06-02 20:36:05 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082: registering service...
2020-06-02 20:36:05 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082 - registration status: 204
2020-06-02 20:36:05 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-06-02 20:36:08 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2020-06-02 20:36:08 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082 - deregister  status: 200
2020-06-02 20:36:08 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-06-02 20:36:13 INFO  b.c.m.p.t.TransportadorApplication - The following profiles are active: default
2020-06-02 20:36:14 WARN  o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-06-02 20:36:14 WARN  o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-06-02 20:36:15 WARN  c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-06-02 20:36:15 INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 20:36:15 INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1b444b5
2020-06-02 20:36:16 WARN  c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-06-02 20:36:16 INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 20:36:18 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-06-02 20:36:19 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-06-02 20:36:19 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-06-02 20:36:19 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-06-02 20:36:19 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-06-02 20:36:19 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-06-02 20:36:19 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2020-06-02 20:36:19 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-06-02 20:36:19 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-06-02 20:36:19 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-06-02 20:36:19 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2020-06-02 20:36:19 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-06-02 20:36:19 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-02 20:36:19 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1591140979207 with initial instances count: 3
2020-06-02 20:36:19 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1591140979234, current=UP, previous=STARTING]
2020-06-02 20:36:19 WARN  c.n.discovery.InstanceInfoReplicator - Ignoring onDemand update due to rate limiter
2020-06-02 20:36:19 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082: registering service...
2020-06-02 20:36:19 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082 - registration status: 204
2020-06-02 20:36:19 INFO  b.c.m.p.t.TransportadorApplication - Started TransportadorApplication in 7.464 seconds (JVM running for 8.325)
2020-06-02 20:36:37 WARN  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1591140997109, current=DOWN, previous=UP]
2020-06-02 20:36:37 WARN  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1591140997111, current=UP, previous=DOWN]
2020-06-02 20:36:37 WARN  c.n.discovery.InstanceInfoReplicator - Ignoring onDemand update due to rate limiter
2020-06-02 20:36:37 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082: registering service...
2020-06-02 20:36:37 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082 - registration status: 204
2020-06-02 20:36:37 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-06-02 20:36:40 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2020-06-02 20:36:40 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_LOJA/192.168.0.16:loja:8082 - deregister  status: 200
2020-06-02 20:36:40 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-06-02 20:36:46 INFO  b.c.m.p.t.TransportadorApplication - The following profiles are active: default
2020-06-02 20:36:48 WARN  o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-06-02 20:36:48 WARN  o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-06-02 20:36:49 WARN  c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-06-02 20:36:49 INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 20:36:49 INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@fde487b
2020-06-02 20:36:50 WARN  c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-06-02 20:36:50 INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 20:36:52 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-06-02 20:36:52 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-06-02 20:36:52 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-06-02 20:36:52 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-06-02 20:36:52 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-06-02 20:36:52 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-06-02 20:36:52 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2020-06-02 20:36:52 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-06-02 20:36:52 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-06-02 20:36:52 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-06-02 20:36:52 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2020-06-02 20:36:52 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-06-02 20:36:52 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-02 20:36:52 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1591141012804 with initial instances count: 3
2020-06-02 20:36:52 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1591141012821, current=UP, previous=STARTING]
2020-06-02 20:36:52 WARN  c.n.discovery.InstanceInfoReplicator - Ignoring onDemand update due to rate limiter
2020-06-02 20:36:52 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_TRANSPORTADOR/192.168.0.16:transportador:8082: registering service...
2020-06-02 20:36:52 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_TRANSPORTADOR/192.168.0.16:transportador:8082 - registration status: 204
2020-06-02 20:36:53 INFO  b.c.m.p.t.TransportadorApplication - Started TransportadorApplication in 7.101 seconds (JVM running for 7.968)
